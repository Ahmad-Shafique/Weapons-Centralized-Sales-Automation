<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>